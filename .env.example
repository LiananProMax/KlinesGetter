# .env.example
# 这是示例配置文件，复制为.env并根据需要修改

# --- API配置 ---
# 四个环境分别需要独立的 API 密钥和 Secret
# 主网期货 API 密钥和 Secret
API_KEY_MAIN_FUTURES="替换为您的主网期货 API 密钥"
API_SECRET_MAIN_FUTURES="替换为您的主网期货 API Secret"
# 主网现货 API 密钥和 Secret
API_KEY_MAIN_SPOT="替换为您的主网现货 API 密钥"
API_SECRET_MAIN_SPOT="替换为您的主网现货 API Secret"
# 测试网期货 API 密钥和 Secret
API_KEY_TEST_FUTURES="替换为您的测试网期货 API 密钥"
API_SECRET_TEST_FUTURES="替换为您的测试网期货 API Secret"
# 测试网现货 API 密钥和 Secret
API_KEY_TEST_SPOT="替换为您的测试网现货 API 密钥"
API_SECRET_TEST_SPOT="替换为您的测试网现货 API Secret"

# 是否使用测试网 (True/False)
IS_TESTNET="False" # "True" 或 "False"

# 市场类型 (FUTURES 或 SPOT)
MARKET_TYPE="FUTURES" # "FUTURES" 或 "SPOT"

# 币安 API 基础 URL (自动根据 IS_TESTNET 和 MARKET_TYPE 处理)
# 不再需要手动配置 API_BASE_URL_FUTURES 或其他，代码会动态处理

# API调用重试配置 (用于策略中的API调用)
MAX_API_RETRIES="3"
API_RETRY_DELAY="5" # 秒

# SSL 证书验证设置
# 注意：在生产环境中应保持为 True，仅在开发/测试环境中设置为 False
VERIFY_SSL="True"

# --- 交易对设置 ---
# 交易符号，例如：BTCUSDT, ETHUSDT
SYMBOL="BTCUSDT"

# --- 运行模式 ---
# 决定基础和聚合间隔，不再影响市场类型（期货/现货）
# "TEST": 基础 "1m" -> 聚合 "3m" (适用于快速测试)
# "PRODUCTION": 基础 "1h" -> 聚合 "3h" (适用于正式运行)
# 市场类型现在通过 MARKET_TYPE 配置项单独设置
OPERATING_MODE="TEST" # "TEST" 或 "PRODUCTION"

# --- K线设置 ---
# 初始获取和显示的聚合K线数量
HISTORICAL_AGG_CANDLES_TO_DISPLAY="50"
# 币安API每个请求允许的最大K线数量
MAX_KLINE_LIMIT_PER_REQUEST="1000"

# 策略模块内部维护的基础K线历史长度 (用于指标计算)
# 应大于所有指标的最大lookback + 缓冲区
MAX_DF_LEN_STRATEGY="1000"

# --- 策略参数 (Improved MinhPhan EMA VWAP RSI) ---

# --- EMA Settings ---
# Length for the shorter Exponential Moving Average. Value must be positive.
SHORT_EMA_LEN="9"
# Length for the longer Exponential Moving Average. Value must be positive and greater than SHORT_EMA_LEN.
LONG_EMA_LEN="21"

# --- RSI Settings ---
# Length for the Relative Strength Index calculation. Value must be positive.
RSI_LEN="14"
# RSI level considered Overbought. Value must be between 0-100.
RSI_OVERBOUGHT="70.0"
# RSI level considered Oversold. Value must be between 0-100 and less than RSI_OVERBOUGHT.
RSI_OVERSOLD="30.0"

# --- VWAP Settings ---
# Reset period for VWAP calculation: 'D' (Daily), 'W' (Weekly), 'M' (Monthly).
VWAP_PERIOD="D"

# --- Stop Loss / Take Profit Settings ---
# Enable or disable the Stop Loss / Take Profit logic managed by the bot.
# Set to "True" to use SL/TP orders managed by the bot.
# Set to "False" to rely only on strategy signals (like RSI exit) for closing position via market order.
USE_SLTP="True" # "True" 或 "False"

# Stop Loss distance from entry price (in 'ticks').
# A 'tick' is the minimum price movement for the symbol (fetched from Binance).
# Value must be non-negative. 0 disables SL if USE_SLTP is True.
STOP_LOSS_TICKS="100"

# Take Profit distance from entry price (in 'ticks').
# Value must be non-negative. 0 disables TP if USE_SLTP is True.
TAKE_PROFIT_TICKS="200"

# --- Order Management Parameters (由策略内部使用) ---
# Percentage of available balance/equity to use for each trade entry.
# For FUTURES, percentage of available USDT balance (in cross margin).
# For SPOT BUY, percentage of available SPOT_QUOTE_ASSET balance.
# For SPOT SELL, percentage of available base asset balance (when closing position).
# Example: 0.10 means 10%. Value must be between 0.0 (exclusive) and 1.0 (inclusive).
QTY_PERCENT="0.90"

# Delay (in seconds) between polling attempts when waiting for an order to fill or confirm status.
# 注意: 策略模块为了简化保留了阻塞式polling，生产环境不推荐。
ORDER_STATUS_CHECK_DELAY="2"

# Delay (in seconds) between attempts to verify position closure after sending a close order.
POSITION_CLOSE_VERIFY_DELAY="3"

# Maximum number of attempts to verify position closure.
POSITION_CLOSE_VERIFY_ATTEMPTS="5"

# Spot Quote Asset (如果需要 SPOT 交易)
# The primary quote asset for spot trading (e.g., USDT, BUSD).
# Used to calculate available balance for SPOT BUY orders.
# Only relevant if MARKET_TYPE is SPOT.
SPOT_QUOTE_ASSET="USDT"


# --- 日志配置 ---
# 应用程序的日志级别。
# 可能的值: "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"
LOG_LEVEL="INFO"

# --- 数据同步/验证配置 ---
# 验证策略执行前，确保数据库/内存中有足够数据的重试配置
DATA_SYNC_VERIFY_DELAY="5" # 在数据验证尝试之间等待的秒数
DATA_SYNC_VERIFY_ATTEMPTS="12" # 数据验证重试次数


# --- 数据存储配置 ---
# 选择数据存储类型："memory"(内存) 或 "database"(数据库)
DATA_STORE_TYPE="memory" # "memory" 或 "database"
# 如果使用通用连接字符串
# DB_CONNECTION_STRING="替换为您的数据库连接字符串" 

# --- PostgreSQL数据库配置 (如果 DATA_STORE_TYPE="database") ---
DB_HOST="localhost"
DB_PORT="5432"
DB_NAME="binance_data"
DB_USER="your_db_user"
DB_PASSWORD="your_db_password"
